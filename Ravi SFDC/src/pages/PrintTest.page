<apex:page >
<script>
    function print() {
         var applet = document.jZebra;
         alert(applet);
         if (applet != null) {
            // Send characters/raw commands to applet using "append"
            // Hint:  Carriage Return = \r, New Line = \n, Escape Double Quotes= \"
            // Note:  "Unescape" is optional and is used to fix "%20" type URL encoded fields
            applet.append(unescape(document.getElementById("j_id0:j_id2:text").value.replace("PrintPage", applet.getVersion() + "Print Test")));
            
            
            //applet.append("A590,1600,2,3,1,1,N,\"jZebra " + applet.getVersion() + " sample.html\"\n");
            //applet.append("A590,1570,2,3,1,1,N,\"Testing the print() function\"\n");
            //applet.append("P1\n");
            
            // Send characters/raw commands to printer
            applet.print();
     }
     
     monitorPrinting();
         
         /**
           *  PHP PRINTING:
           *  // Uses the php `"echo"` function in conjunction with jZebra `"append"` function
           *  // This assumes you have already assigned a value to `"$commands"` with php
           *  document.jZebra.append(<?php echo $commands; ?>);
           */
           
         /**
           *  SPECIAL ASCII ENCODING
           *  //applet.setEncoding("UTF-8");
           *  applet.setEncoding("Cp1252"); 
           *  applet.append("\xDA");
           *  applet.append(String.fromCharCode(218));
           *  applet.append(chr(218));
           */
         
    }
    
    function print64() {
         var applet = document.jZebra;
         if (applet != null) {
            // Use jZebra's `"append64"` function. This will automatically convert provided
            // base64 encoded text into ascii/bytes, etc.
            applet.append64(document.getElementById("print64Field").value);
            
            // Send characters/raw commands to printer
            applet.print();
         }
         monitorPrinting();
      }
      
    function monitorPrinting() {
              //"alert\(\"Data sent to printer successfully\"\)"
              monitorApplet("isDonePrinting()", 'alert("Data sent to printer [" + document.jZebra.getPrinter() + "] successfully.")', "monitor printing job");
      }
    
    function findPrinter() 
    {
         var applet = document.jZebra;
         alert(applet);
         if (applet != null) 
         {
            alert("printer found");
            // Searches for locally installed printer with "zebra" in the name
            applet.findPrinter(document.getElementById("j_id0:j_id2:text").value);
         }
         monitorFinding();
    }
    
    function monitorFinding() 
    {
        monitorApplet('isDoneFinding()', 'alert("Found printer [" + document.jZebra.getPrinter() + "]")', 'monitor finding job');
    }
    
      
    
    function monitorApplet(appletFunction, finishedFunction, description) 
    {
        var NOT_LOADED = "jZebra hasn't loaded yet.";
        var INVALID_FUNCTION = 'jZebra does not recognize function: "' + appletFunction; + '"';
        var INVALID_PRINTER = "jZebra could not find the specified printer";
        if (document.jZebra != null) 
        {
            var finished = false;
            try 
            {
               finished = eval('document.jZebra.' + appletFunction);
            }
             catch (err) 
             {
               alert('jZebra Exception:  ' + INVALID_FUNCTION);
               return;
            }
       if (!finished) 
       {
          window.setTimeout('monitorApplet("' + appletFunction + '", "' + 
                  finishedFunction.replace(/\"/g,'\\"') + '", "' + description + '")', 100);
       } 
       else 
       {
        var p = document.jZebra.getPrinterName();
        if (p == null) 
        {
            alert("jZebra Exception:  " + INVALID_PRINTER);
            return;
        }
        var e = document.jZebra.getException();
            if (e != null) 
            {
                var desc = description == "" ? "" : " [" + description + "] ";
                alert("jZebra Exception: " + desc + document.jZebra.getExceptionMessage());
                document.jZebra.clearException();
            } 
            else 
            {
                eval(finishedFunction);
            }
       }
    } 
    else 
    {
       alert("jZebra Exception:  " + NOT_LOADED);
    }
   }
      
    
</script>    

<applet name="jZebra" code="jzebra.PrintApplet.class" alt="jZebra did not load properly" archive="/resource/1299218009000/JZebra" width="0" height="0">
    <param name="printer" value="zebra" />
</applet>
    <apex:form >
        <apex:commandButton value="Click Here" onclick="return print()"/> 
        <apex:commandButton value="Find" onclick="return findPrinter()"/> 
        <apex:commandButton value="Print64" onclick="return print64()"/> 
        <apex:inputtext id="text" />
        <input type="text" id="print64Field" />
    </apex:form>
    <div align="center">
        <apex:outputLabel style="font-weight:bold;fontsize:16px;color:blue">
            Powerd by 
        </apex:outputLabel> <br/>
        <apex:image url="/resource/1299218009000/jZebraImage"  height="50"/>
    </div>
  
</apex:page>